#!/usr/bin/env bash

# Dependencies: imagemagick, i3lock-color-git, scrot, xset

# Set default variables
TEXT="Type password to unlock"

usage() {
    echo "$0 - A wrapper for i3lock(-color) to make a fancy lock screen."
    echo -e "\nUsage:\n$0 [-f] [-d \"x y z\"]\n"
    echo "   -f: enable support for fortune"
    echo "   -d \"<standby> <suspend> <off>\": enable dpms support. e.g. \" -d 5 5 5\"."
    echo "          -d must be followed by a valid string."
}

# Read xset and remember what the dpms settings currently are
XSET=`xset q`
if [[ $XSET =~ Standby:\ ([0-9]+) ]]; then
    XSTANDBY=${BASH_REMATCH[1]}
fi
if [[ $XSET =~ Suspend:\ ([0-9]+) ]]; then
    XSUSPEND=${BASH_REMATCH[1]}
fi
if [[ $XSET =~ Off:\ ([0-9]+) ]]; then
    XOFF=${BASH_REMATCH[1]}
fi

IMAGE=$(mktemp)-i3lock.png

# Gracefully exit, reverting dpms and removing temp files.
quit() {
    xset +dpms dpms $XSTANDBY $XSUSPEND $XOFF
    rm $IMAGE
    exit 0
}
trap quit SIGHUP SIGINT SIGTERM

options=":hfd:"
while getopts $options option; do
    case $option in
        f)
            if [ ! -f `which fortune` ]; then
                echo "Option -f specified, but fortune not found."
                exit 3
            fi
            TEXT=`fortune -s`
            ;;
        d)
            DPMSFLAG=1
            DPMS=$OPTARG
            ;;
        h)
            usage
            exit 0
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            exit 1
            ;;
        :)
            echo "Option -$OPTARG requires an argument." >&2
            exit 1
            ;;
    esac
done

RES=`xrandr | grep " connected " | awk '{print $3}' | awk -F+ 'NR>1{print $1}' | awk -Fx '{print $1}'`
if [ -n "$RES" ]; then
    RES=`expr $RES / 2`
fi

# We need to check to see which version of i3lock is available,
# and where it is located. The latter is necessary because on some
# systems we may have the i3lock-color binary installed to i3lock
if [ -f `which i3lock-color` ]; then
    I3LOCK='i3lock-color'
    LOCKPATH=`which i3lock-color`
elif [ -f `which i3lock` ]; then
    VERSION=`i3lock --version`
    LOCKPATH=`which i3lock`
    if [[ $VERSION =~ ^i3lock-color: ]]; then
        I3LOCK='i3lock-color'
    elif [[ $VERSION =~ ^i3lock: ]]; then
        I3LOCK='i3lock'
    fi
else
    echo "This script requires i3lock-color or i3lock"
    exit 3
fi

# get path where the script is located
# its used for the lock icon
pushd `dirname $0` > /dev/null
SCRIPTPATH=`pwd`
popd > /dev/null
 
# l10n support
case $LANG in
    fr_* ) TEXT="Entrez votre mot de passe" ;; # Français
    es_* ) TEXT="Ingrese su contraseña" ;; # Española
    pl_* ) TEXT="Podaj hasło" ;; # Polish
esac

VALUE="60" #brightness value to compare to
scrot $IMAGE
COLOR=`convert $IMAGE -colorspace hsb -resize 1x1 txt:- | sed -E '/.*$/ {
                             N
                             s/.*\n.*([0-9]{1,2}[^\.])\.[0-9]+%\)$/\1/
                             }'`;
# pixelate: -scale 10% -scale 1000%
# check if multiple screens in use
if [ `xrandr | grep " connected " | awk '{print $3}' | wc -l` -gt 1 ]; then
    if [ "$COLOR" -gt "$VALUE" ]; then #white background image and black text
        convert $IMAGE -level 0%,100%,0.6 \
            -filter Gaussian -resize 20% -define filter:sigma=1.5 -resize 500.5% \
            -font Liberation-Sans -pointsize 26 -fill black -gravity center \
            -annotate -$RES+160 "$TEXT" \
            -draw "image Over -$RES,0 60,60 \"$SCRIPTPATH/lockdark.png\"" $IMAGE
            #$SCRIPTPATH/lockdark.png -gravity center -composite $IMAGE
        PARAM='--textcolor=00000000 --insidecolor=0000001c --ringcolor=0000003e \
            --linecolor=00000000 --keyhlcolor=ffffff80 --ringvercolor=ffffff00 \
            --insidevercolor=ffffff1c --ringwrongcolor=ffffff55 --insidewrongcolor=ffffff1c'
    else #black
        convert $IMAGE -level 0%,100%,0.6 \
            -filter Gaussian -resize 20% -define filter:sigma=1.5 -resize 500.5% \
            -font Liberation-Sans -pointsize 26 -fill white -gravity center \
            -annotate -$RES+160 "$TEXT" \
            -draw "image Over -$RES,0 60,60 \"$SCRIPTPATH/lock.png\"" $IMAGE
            #$SCRIPTPATH/lock.png -composite $IMAGE
        PARAM='--textcolor=ffffff00 --insidecolor=ffffff1c --ringcolor=ffffff3e \
            --linecolor=ffffff00 --keyhlcolor=00000080 --ringvercolor=00000000 \
            --insidevercolor=0000001c --ringwrongcolor=00000055 --insidewrongcolor=0000001c'
    fi
else #yes the whole code has to be repeated, otherwise the
     #text is upside down if you only have one monitor
    if [ "$COLOR" -gt "$VALUE" ]; then #white background image and black text
        convert $IMAGE -level 0%,100%,0.6 \
            -filter Gaussian -resize 20% -define filter:sigma=1.5 -resize 500.5% \
            -font Liberation-Sans -pointsize 26 -fill black -gravity center \
            -annotate +0+160 "$TEXT" \
            $SCRIPTPATH/lockdark.png -gravity center -composite $IMAGE
        PARAM='--textcolor=00000000 --insidecolor=0000001c --ringcolor=0000003e \
            --linecolor=00000000 --keyhlcolor=ffffff80 --ringvercolor=ffffff00 \
            --insidevercolor=ffffff1c --ringwrongcolor=ffffff55 --insidewrongcolor=ffffff1c'
    else #black
        convert $IMAGE -level 0%,100%,0.6 \
            -filter Gaussian -resize 20% -define filter:sigma=1.5 -resize 500.5% \
            -font Liberation-Sans -pointsize 26 -fill white -gravity center \
            -annotate +0+160 "$TEXT" \
            $SCRIPTPATH/lock.png -gravity center -composite $IMAGE
        PARAM='--textcolor=ffffff00 --insidecolor=ffffff1c --ringcolor=ffffff3e \
            --linecolor=ffffff00 --keyhlcolor=00000080 --ringvercolor=00000000 \
            --insidevercolor=0000001c --ringwrongcolor=00000055 --insidewrongcolor=0000001c'
    fi
fi

# Set the requested dpms variables
if [ -n $DPMSFLAG ]; then
    xset +dpms dpms $DPMS
fi

# try to use a forked version of i3lock with prepared parameters
# otherwise scrap the params and use regular i3lock
case $I3LOCK in
    i3lock-color)
        $LOCKPATH -n $PARAM -i $IMAGE
        ;;
    i3lock)
        $LOCKPATH -n -i $IMAGE
        ;;
esac

quit
